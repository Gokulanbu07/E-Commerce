@model IEnumerable<ECommerce.Repository.Product>

@{
    ViewData["Title"] = "Products in " + ViewBag.CategoryName;
}

<style>
    /* Amazon-inspired Global Styling */
    body {
        background-color: #f0f2f5; /* Light, almost white background, similar to Amazon */
        font-family: Arial, sans-serif; /* Amazon often uses a variant of Arial or custom sans-serif */
        color: #111; /* Default text color, deep black */
    }

    /* --- Page Header Styling (Amazon doesn't typically have large category headers,
                    but we'll adapt yours to fit the theme) --- */
    .page-header {
        margin-top: 3rem; /* Slightly less aggressive margin */
        margin-bottom: 2.5rem; /* Standard spacing */
        position: relative;
    }

        .page-header h2 {
            color: #111; /* Black for primary headings */
            font-weight: 700; /* Bold */
            font-size: 2rem; /* Slightly smaller for Amazon's directness */
            padding-bottom: 0.5rem; /* Less space under heading */
            position: relative;
            display: inline-block;
        }

            .page-header h2::after {
                content: '';
                position: absolute;
                left: 50%;
                bottom: 0;
                transform: translateX(-50%);
                width: 80px; /* Shorter underline */
                height: 3px;
                background-color: #FF9900; /* Amazon Orange accent */
                border-radius: 2px;
            }

    /* --- No Products Alert (Amazon's informational alerts are usually subtle) --- */
    .alert-info-amazon {
        background-color: #EBF8FF; /* Very light blue background */
        color: #004B91; /* Dark blue text */
        border: 1px solid #BFE0EC; /* Subtle blue border */
        padding: 1.25rem;
        border-radius: 4px; /* Standard, less rounded corners */
        font-size: 1rem;
        font-weight: normal;
        box-shadow: none; /* No shadow for alerts */
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .alert-info-amazon .bi { /* For the Bootstrap Icon */
            color: #007185; /* Teal-ish for info icons */
            font-size: 1.3rem;
            margin-right: 0.75rem;
        }

    /* --- Product Card Styling (Mimicking Amazon's clean, informative cards) --- */
    .product-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: none;
        transition: box-shadow 0.2s ease, border-color 0.2s ease;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        height: 100%;
        background-color: #fff;
    }

        .product-card:hover {
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.08);
            border-color: #c0c0c0;
            transform: none;
        }

    .product-image {
        height: 150px; /* Further reduced height for a smaller, squarer look */
        object-fit: contain; /* Ensures the whole image is visible */
        background-color: #fff;
        padding: 8px; /* Slightly reduced padding around the image */
        border-bottom: 1px solid #eee;
    }

    .product-image-placeholder {
        background-color: #f7f7f7;
        height: 150px; /* Match the reduced image height */
        display: flex;
        justify-content: center;
        align-items: center;
        color: #767676;
        font-size: 0.9rem; /* Slightly smaller text for the placeholder */
        font-weight: normal;
        text-align: center;
        border-bottom: 1px solid #eee;
    }

    .card-body {
        padding: 0.8rem; /* Reduced padding inside the card body */
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .card-title {
        font-size: 0.95rem; /* Slightly smaller title font */
        font-weight: 400;
        color: #007185;
        margin-bottom: 0.2rem; /* Reduced margin */
        line-height: 1.2; /* Tighter line height */
        min-height: 36px; /* Adjusted min-height for 2 lines */
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .card-text.text-muted.small {
        font-size: 0.8rem; /* Smaller description font */
        color: #565959 !important;
        margin-bottom: 0.4rem; /* Reduced margin */
        flex-grow: 1;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2; /* Potentially reduce to 2 lines for even shorter cards */
        -webkit-box-orient: vertical;
    }

    .card-text.price {
        font-size: 1.05rem; /* Slightly smaller price font */
        color: #111;
        font-weight: 700;
        margin-bottom: 0.4rem; /* Reduced margin */
    }

    .card-text.stock {
        font-size: 0.75rem; /* Smaller stock text */
        color: #007185;
        margin-bottom: 0.6rem; /* Reduced margin */
    }

    .add-to-cart-btn-amazon {
        /* Updated gradient colors for a closer Amazon yellow/orange */
        background: linear-gradient(to bottom, #FFD814, #FFC400);
        /* Updated border color to match Amazon's common button borders */
        border: 1px solid #FCD200; /* Slightly more yellow/orange border */
        border-radius: 8px; /* Keep consistent with your current design */
        padding: 0.4rem 0.8rem;
        font-size: 0.85rem;
        font-weight: 600;
        color: #111; /* Keep text dark */
        text-transform: none;
        letter-spacing: normal;
        box-shadow: 0 1px 0 rgba(255, 255, 255, .4) inset;
        transition: all 0.1s ease-in-out;
    }

        .add-to-cart-btn-amazon:hover {
            /* Slightly darker gradient on hover for a subtle change */
            background: linear-gradient(to bottom, #F7CA00, #F3BB00);
            /* Darker border on hover */
            border-color: #B18C00;
            box-shadow: 0 1px 0 rgba(255, 255, 255, .4) inset, 0 1px 1px rgba(0,0,0,.2);
            transform: none;
        }

    /* Responsive adjustments */
    @@media (max-width: 991px) { /* Medium screens (tablets) */
        .col-md-4 {
            flex: 0 0 50%; /* Two columns */
            max-width: 50%;
        }
    }

    @@media (max-width: 575px) { /* Small screens (mobile) */
        .col-md-4 {
            flex: 0 0 100%; /* Single column */
            max-width: 100%;
        }

        .page-header h2 {
            font-size: 1.8rem;
        }
    }
</style>

<div class="container mt-5 mb-5">
    <div class="text-center page-header">
        <h2 class="display-4">Products in @ViewBag.CategoryName</h2>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info alert-info-amazon text-center" role="alert">
            <i class="bi bi-info-circle me-2"></i> No products found for this category yet. Please check back later!
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var product in Model)
            {
                <div class="col-sm-6 col-md-4 col-lg-3 mb-4 d-flex">
                    <div class="card h-100 product-card">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" class="card-img-top product-image" alt="@product.Name">
                        }
                        else
                        {
                            <div class="product-image-placeholder">
                                <span>Image Not Available</span>
                            </div>
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted small">
                                @(product.Description != null && product.Description.Length > 120 ? product.Description.Substring(0, 120) + "..." : product.Description)
                            </p>
                            <div class="mt-auto">
                                <p class="card-text price"><strong>@product.Price.ToString("N0")</strong></p>
                                <p class="card-text stock">
                                    @if (product.StockQuantity > 0)
                                    {
                                        <span style="color: #007185;">In stock.</span>
                                    }
                                    else
                                    {
                                        <span style="color: #c45500;">Out of stock.</span>
                                    }
                                </p>
                                <div class="d-grid gap-2">
                                    <button class="btn btn-success add-to-cart-btn"
                                            data-product-id="@product.productId"
                                    @Html.Raw(product.StockQuantity <= 0 ? "disabled" : "")>
                                        @* <--- SUPER IMPORTANT CHANGE HERE *@
                                        @if (product.StockQuantity > 0)
                                        {
                                            <i class="fas fa-cart-plus"></i>

                                            <span>Add to Cart</span>
                                        }
                                        else
                                        {
                                            <i class="fas fa-exclamation-circle"></i>

                                            <span>Out of Stock</span>
                                        }
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.add-to-cart-btn').on('click', function () {
                var productId = $(this).data('product-id');
                var quantity = 1; // Default quantity for simplicity

                // Check if the button is disabled (out of stock)
                if ($(this).is(':disabled')) {
                    alert('This product is out of stock.');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ productId: productId, quantity: quantity }),
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                        } else {
                            alert('Failed to add product to cart: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX Error:", status, error, xhr.responseText);
                        alert('An error occurred while adding to cart. Please check the console for details.');
                    }
                });
            });
        });
    </script>
}