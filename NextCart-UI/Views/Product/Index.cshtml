@using ECommerce.Repository.Entity
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Products";
}



<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-4 fw-bold text-primary">Discover Your Items</h1>
        <a asp-action="Create" class="btn btn-success btn-lg shadow-sm">
            <i class="bi bi-plus-circle me-2"></i> Create New Product
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center" role="alert">
            <h4 class="alert-heading">No Products Found!</h4>
            <p>It looks like there are no products to display. Click the button above to add your first product.</p>
        </div>
    }
    else
    {
        <div class="table-responsive shadow-sm rounded">
            <table class="table table-hover table-striped border">
                <thead class="table-dark">
                    <tr>
                       
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th scope="col" class="text-end">
                            @Html.DisplayNameFor(model => model.Price)
                        </th>
                        <th scope="col" class="text-center">
                            @Html.DisplayNameFor(model => model.StockQuantity)
                        </th>
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td class="text-end">
                                $@Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td class="text-center">
                                @Html.DisplayFor(modelItem => item.StockQuantity)
                            </td>
                            <td class="text-center">
                                <div class="btn-group gap-2" role="group" aria-label="Product Actions">
                                    <a asp-action="Details" asp-route-id="@item.productId" class="btn btn-info btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="View Details">
                                        <i class="bi bi-eye"></i> Details
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.productId" class="btn btn-primary btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit Product">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.productId" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete Product">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();
        })
    </script>
}