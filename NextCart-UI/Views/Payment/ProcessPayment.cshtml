@model ECommerce.Repository.Models.PaymentInputViewModel

@using ECommerce.Repository
@using ECommerce.Repository.Entity

@{
    ViewData["Title"] = "Process Payment";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Process Your Payment</h4>
                </div>
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            @TempData["ErrorMessage"]
                        </div>
                    }

                    <form asp-action="ProcessPayment" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-3">
                            <label asp-for="OrderId" class="form-label"></label>
                            <input asp-for="OrderId" class="form-control" readonly />
                            <span asp-validation-for="OrderId" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Amount" class="form-label"></label>
                            @* Display the amount to the user *@
                            <span class="text-primary">₹@Model.Amount.ToString("N0")</span>

                            @* ADDED: A hidden input to ensure Amount is sent back to the server on POST *@
                            <input type="hidden" asp-for="Amount" /> @* <--- ADD THIS LINE *@

                            <span asp-validation-for="Amount" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="PaymentMethod" class="form-label"></label>
                            <select asp-for="PaymentMethod" class="form-select" id="paymentMethodSelect">
                                <option value="@((int)PaymentMethod.Online)">Online Payment</option>
                                <option value="@((int)PaymentMethod.COD)">Cash on Delivery</option>
                            </select>
                            <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                        </div>

                        <div id="onlinePaymentDetails" class="mt-4 border p-3 rounded" style="display: block;">
                            <h5>Online Payment Details</h5>
                            <div class="mb-3">
                                <label asp-for="CardNumber" class="form-label"></label>
                                <input asp-for="CardNumber" class="form-control" placeholder="**** **** **** ****" />
                                <span asp-validation-for="CardNumber" class="text-danger"></span>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label asp-for="ExpiryDateString" class="form-label"></label>
                                    <input asp-for="ExpiryDateString" class="form-control" placeholder="MM/YY" />
                                    <span asp-validation-for="ExpiryDateString" class="text-danger"></span>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label asp-for="CVV" class="form-label"></label>
                                    <input asp-for="CVV" class="form-control" placeholder="XXX" />
                                    <span asp-validation-for="CVV" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-success w-100 mt-4">Complete Payment</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const paymentMethodSelect = document.getElementById('paymentMethodSelect');
            const onlinePaymentDetails = document.getElementById('onlinePaymentDetails');

            // Safely inject C# enum integer values into JavaScript
            const PaymentMethod_Online = parseInt('@((int)PaymentMethod.Online)', 10);
            const Model_PaymentMethod_Value = parseInt('@((int)Model.PaymentMethod)', 10);

            function toggleOnlinePaymentDetails() {
                // Compare parsed value of select with the safely injected enum value
                if (parseInt(paymentMethodSelect.value, 10) === PaymentMethod_Online) {
                    onlinePaymentDetails.style.display = 'block';
                } else {
                    onlinePaymentDetails.style.display = 'none';
                }
            }

            // Set initial state based on the current model's PaymentMethod
            // Compare the safely injected model value with the enum value
            if (Model_PaymentMethod_Value === PaymentMethod_Online) {
                onlinePaymentDetails.style.display = 'block';
            } else {
                onlinePaymentDetails.style.display = 'none';
            }

            // Add event listener for changes
            paymentMethodSelect.addEventListener('change', toggleOnlinePaymentDetails);
        });
    </script>
}
